@attribute [Route(Urls.Dashboard)]

<PageTitle>Dashboard</PageTitle>

<MudGrid id="dashboard-header" Justify="Justify.Center">
    <MudItem xs="12">
        <MudPaper Class="py-2 px-2">
            <MudText Typo="Typo.h5" Align="Align.Left">Dashboard</MudText>
            <MudText Typo="Typo.subtitle1" Align="Align.Left">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
        </MudPaper>
    </MudItem>
    <MudItem xs="12">
        <MudStack Row="true" Spacing="6" Justify="Justify.SpaceBetween">
            <MudPaper Height="100px" Width="210px">
                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="py-5 px-5">
                    <MudText Typo="Typo.button">Total</MudText>
                    <MudText Typo="Typo.button">@WidgetData.Total</MudText>
                </MudStack>
            </MudPaper>
            <MudPaper Height="100px" Width="210px">
                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="py-5 px-5">
                    <MudText Typo="Typo.button">Paused</MudText>
                    <MudText Typo="Typo.button">@WidgetData.Paused</MudText>
                </MudStack>
            </MudPaper>
            <MudPaper Height="100px" Width="210px">
                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="py-5 px-5">
                    <MudText Typo="Typo.button">Active</MudText>
                    <MudText Typo="Typo.button">@WidgetData.Active</MudText>
                </MudStack>
            </MudPaper>
            <MudPaper Height="100px" Width="210px">
                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="py-5 px-5">
                    <MudText Typo="Typo.button">Recent Changes</MudText>
                    <MudText Typo="Typo.button">@WidgetData.ChangeDetected</MudText>
                </MudStack>
            </MudPaper>
        </MudStack>
    </MudItem>
    <MudItem xs="12">
        <MudPaper Class="py-2 px-2">
            @if(Resources.Any())
            {
                <MudExpansionPanels MultiExpansion="true">
                    @foreach(var resource in Resources)
                    {
                        <MudExpansionPanel Text="@resource.DisplayName" Expanded="@UserAppSettings.AreCollapsePanelsExpanded">
                            @if (TargetsByResourceId.TryGetValue(resource.Id, out var targets) && targets.Any())
                            {
                                <MudStack>
                                    @foreach(var target in targets)
                                    {
                                        <MudStack Row="true" Class="d-flex align-items-center">
                                            <MudText Class="pt-2 pb-1" style="width: 180px;">@target.DisplayName</MudText>
                                            <MudStack Row="true" style="width: 650px;" Class="pt-2 pb-1">
                                                @foreach(var snapshot in SnapshotsByTargetId[target.Id])
                                                {
                                                    <MudTooltip Text="@GetSnapshotTooltipText(snapshot)" Placement="Placement.Top" Arrow="true">
                                                        <MudPaper Height="20px" Width="20px" Outlined="true" Class="@GetSnapshotStyle(snapshot)"></MudPaper>
                                                    </MudTooltip>
                                                }
                                            </MudStack>
                                            <MudIconButton 
                                                Disabled="SnapshotsByTargetId[target.Id].All(snapshot => snapshot is null)" 
                                                Style="height: 20px; width: 20px; margin-top: 5px;"
                                                Icon="@Icons.Material.Filled.List"
                                                OnClick="@(() => OpenSnapshotHistoryAsync(target))"/>
                                        </MudStack>
                                        <MudDivider/>
                                    }
                                </MudStack>
                            }
                            else
                            {
                                <MudText>No targets available.</MudText>
                            }
                        </MudExpansionPanel>
                    }
                </MudExpansionPanels>
            }
            else
            {
                <MudText>No resources available.</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private static string GetSnapshotStyle(TargetSnapshotDto snapshot)
    {
        if (snapshot is null)
        {
            return "border-dashed";
        }

        if (snapshot.Outcome is Outcome.Failure)
        {
            return "border-solid mud-theme-error";
        }

        if (snapshot.Outcome is Outcome.Success && !snapshot.IsChangeDetected)
        {
            return "border-solid";
        }

        if (snapshot.Outcome is Outcome.Success && snapshot.IsExpectedValue)
        {
            return "border-solid mud-theme-success";
        }

        return "border-solid mud-theme-primary";
    }
    
    private static string GetSnapshotTooltipText(TargetSnapshotDto snapshot)
    {
        if (snapshot is null)
        {
            return "N/A";
        }

        if (snapshot.Outcome is Outcome.Failure)
        {
            return $"Error - {snapshot.CreatedAt}";
        }

        if (snapshot.Outcome is Outcome.Success && !snapshot.IsChangeDetected)
        {
            return $"No changes - {snapshot.CreatedAt}";
        }

        if (snapshot.Outcome is Outcome.Success && snapshot.IsExpectedValue)
        {
            return $"Expected value detected - {snapshot.CreatedAt}";
        }

        return $"Changes detected - {snapshot.CreatedAt}";
    }
}
