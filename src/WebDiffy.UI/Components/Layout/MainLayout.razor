@inherits LayoutComponentBase

<MudThemeProvider Theme="@ThemeConfigs.Theme" IsDarkMode="@ThemeConfigs.IsDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudContainer MaxWidth="MaxWidth.Large">
        <MudGrid Justify="Justify.Center" Spacing="5">
            <MudItem xs="12">
                <MudPaper>
                    <div class="py-4">
                        <MudText id="page-header" Typo="Typo.h5" Align="Align.Center" Class="align-center justify-center mud-width-full">web_diffy</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="3">
                <MudPaper>
                    <MudNavMenu id="nav-menu" Bordered="true" Class="py-4">
                        <MudNavLink Href="@Urls.Dashboard" Match="NavLinkMatch.Prefix">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Dashboard</MudText>
                        </MudNavLink>
                        <MudNavLink Href="@Urls.Resources" Match="NavLinkMatch.Prefix">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Resources</MudText>
                        </MudNavLink>
                        <MudNavLink Href="@Urls.Targets" Match="NavLinkMatch.Prefix">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Targets</MudText>
                        </MudNavLink>
                        <MudNavLink Href="@Urls.Settings" Match="NavLinkMatch.Prefix">
                            <MudText Typo="Typo.subtitle1" Align="Align.Left">Settings</MudText>
                        </MudNavLink>
                    </MudNavMenu>
                </MudPaper>
            </MudItem>
            <MudItem xs="9">
                <MudMainContent Class="py-0">
                    @Body
                </MudMainContent>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code
{
    [Inject]
    private IUserSettingsService UserSettingsService { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            var storedSettings = await UserSettingsService.GetAsync();
            if (storedSettings is not null)
            {
                UserAppSettings.Populate(storedSettings);
            }
        }
        catch
        {
            var currentSettings = ObjectCopyHelper.DeepCopy(UserAppSettings.ToData());
            await UserSettingsService.CreateAsync(currentSettings);
        }
    }
}